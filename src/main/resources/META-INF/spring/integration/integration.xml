<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:int="http://www.springframework.org/schema/integration"
	   xmlns:int-ip="http://www.springframework.org/schema/integration/ip"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/ip http://www.springframework.org/schema/integration/ip/spring-integration-ip.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd">

	<context:property-placeholder/>
	
<!-- 	<cache:annotation-driven /> -->
    <int:logging-channel-adapter id="logging" log-full-message="true" level="TRACE"/>
                
	<!-- Server side -->
	<int-ip:tcp-connection-factory id="crLfServer"
								   type="server"
								   port="65530"
								   using-nio="true"
								   lookup-host="false"									   		   
								   />								   
    
    <int-ip:tcp-outbound-channel-adapter id="outboundServer"
        channel="tcpOutputChannel"
        connection-factory="crLfServer"/>
        
    <int:channel id="tcpOutputChannel"/>
    
    <int:chain input-channel="toTcpClient" output-channel="tcpOutputChannel">
        <int:transformer ref="messageConverter" method="convertBack"/>
       <int:transformer ref="messageDecoder" method="encode"/>       
    </int:chain>
     
    <int:channel id="toTcpClient"/>  

	
	<int-ip:tcp-inbound-channel-adapter id="inboundServer"
	    channel="tcpInputChannel"
	    error-channel="errorChannel"
	    connection-factory="crLfServer"/>

	<int:channel id="tcpInputChannel"/>
    
    <bean id="jsonSerializer" 
          class="com.apu.TcpServerForAccessControl.converter.JsonSerializer"/>                                   
	
	<int:chain input-channel="tcpInputChannel" output-channel="toEngineChannel">
	   <int:transformer ref="messageChecker" method="check"/>
	   <int:transformer ref="messageDecoder" method="decode"/>
	   <int:transformer ref="messageConverter" method="convert"/>
	 </int:chain>
	 
	 <int:channel id="toEngineChannel"/>
	
	<bean id="messageChecker"
          class="com.apu.TcpServerForAccessControl.message.MessageChecker"/>
	
	<bean id="messageDecoder"
          class="com.apu.TcpServerForAccessControl.message.MessageDecoder"/>
          
    <bean id="messageConverter"
          class="com.apu.TcpServerForAccessControl.message.MessageConverter"/>	
	
	<int:payload-type-router input-channel="toEngineChannel">
	    <int:mapping type="com.apu.TcpServerForAccessControlAPI.packet.ServicePacket" channel="toServiceEngineChannel" />
	    <int:mapping type="com.apu.TcpServerForAccessControlAPI.packet.InfoPacket" channel="toInfoEngineChannel" />
	    <int:mapping type="com.apu.TcpServerForAccessControlAPI.packet.AccessPacket" channel="toAccessEngineChannel" />
	</int:payload-type-router>
	
	
	<int:channel id="toServiceEngineChannel"/>
	
	<int:service-activator input-channel="toServiceEngineChannel"
	                       output-channel="toTcpClient"
                           ref="serviceRulesEngine"
                           method="engine"
                           order="2"/>
                           
    
    <int:channel id="toInfoEngineChannel"/>
                           
    <int:service-activator input-channel="toInfoEngineChannel"
                           output-channel="toTcpClient"
                           ref="infoRulesEngine"
                           method="engine"
                           order="3"/>
                           
    <int:channel id="toAccessEngineChannel"/>
    
    <int:service-activator input-channel="toAccessEngineChannel"
                           output-channel="toTcpClient"
                           ref="accessRulesEngine"
                           method="engine"
                           order="1"/>
	
	<bean id="serviceRulesEngine"
          class="com.apu.TcpServerForAccessControl.engine.ServiceRulesEngine"/>
	
	<bean id="infoRulesEngine"
          class="com.apu.TcpServerForAccessControl.engine.InfoRulesEngine"/>	
          
    <bean id="accessRulesEngine"
          class="com.apu.TcpServerForAccessControl.engine.AccessRulesEngine"/>  
         
          
    <int:channel id="toLogging"/>
    
    <int:service-activator input-channel="toLogging"
                           ref="logWriter"
                           method="writeToLog"/>
                           
    <bean id="logWriter"
          class="com.apu.TcpServerForAccessControl.logging.LogWriter"/>

	<int:channel id="errorChannel"/>
					 
	<int:service-activator input-channel="errorChannel" ref="errorHandler" method="handle"/>
					 
    <bean id="errorHandler"
         class="com.apu.TcpServerForAccessControl.message.ErrorHandler"/>
	
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="jdbcUrl" value="jdbc:postgresql://localhost:5432/accesscontroldb" /><!-- 192.168.0.11 -->
        <property name="username" value="postgres" />
        <property name="password" value="" /><!-- 123456 -->
        <property name="maximumPoolSize" value="2" />
    </bean>

	
<!--     <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">  -->
<!-- 	    <property name="caches">  -->
<!-- 	        <set>  -->
<!-- 	            <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="card"/>  -->
<!-- 	            <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="device"/>  -->
<!-- 	            <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="eventtype"/>  -->
<!-- 	            <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="rule"/>  -->
<!-- 	            <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="ruletype"/>  -->
<!-- 	        </set>  -->
<!-- 	    </property>  -->
<!-- 	</bean> -->

</beans>